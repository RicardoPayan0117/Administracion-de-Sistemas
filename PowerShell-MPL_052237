Variables y tipos de datos. 

$variable1="Hola" 
$variable2="Que tal?" 
$variable3=100 
${VAR iable4}=200 
New-Variable -name variable5 -value 300 
************************************************
$variable5 
$variable1="Hola" 
$variable1 
$variable2 
$variable3 
${VAR iable4} 
************************************************
$variable1+$variable2 
$variable3+${VAR iable4} 
$variable3-${VAR iable4} 
$variable1+$variable2 
************************************************
$$ 
$^ 
$?
************************************************
get-help about_automatic_variables 
Get-Help about_preferences_variables 
$.GetType() 


-------------------------------------------------------------------
Ejecuciones Condicionales y Bucles 
************************************************
$condicion = $true
if ( $condicion )
{
	Write-Output "La condicion era veradera"
}
else
{
	Write-Output "La condicion era falsa"
} 
************************************************
.\condicionales.ps1
************************************************
cat .\switch.ps1
{
 1 {"[$_] es uno."}
 2 {"[$_] es dos."}
 3 {"[$_] es tres."}
 4 {"[$_] es cuatro."}
 "se*" { "[$_] coincide con se*.}
 Default {
  "No hay coincidencias con [$_]"
} 
************************************************
.\switch.ps1
-------------------------------------------------------------------
Operadores lógicos y comparativos
************************************************
cat .\for.ps1
for (($i = 0), ($j = 0); $i-lt 5; $i++)
{
	"´$i:$i"
 	"´$j:$j"
} 
************************************************
.\for.ps1
************************************************
cat .\for2.ps1
for (($i = 0), ($j = 0); $i-lt 5; $i++; $($i++;$j++))
{
	"´$i:$i"
 "´$j:$j"
} 
************************************************
.\for2.ps1
************************************************
cat . \foreachl.psl
$ssoo = "freebsd", "openbsd", "solaris", "fedora", "ubuntu", "netbsd"
foreach ($so in $ssoo)
{
	Write-Host $so
} 
************************************************
. \foreachl.psl
************************************************
cat .\while.ps1
$num = 0

while ($num -ne 3)
{
	$num++
	Write-Host $num
}
************************************************
.\while .psl
************************************************
cat .\whi1e2.ps1
$num = 0

while ($num -ne 5)
{
	if ($num -eq 1) { $num = $num + 3 ; Continue }
	$num++
	Write-Host $num
}
************************************************
.\whi1e2.ps1
************************************************
cat .\do-while.ps1
$valor = 5
$multiplicacion = 1
do
{
	$multiplicacion = $multiplicacion * $valor
	$valor- -
}
while ($valor -gt 0)

Write-Host $multiplicacion
************************************************
.\do-while.ps1

-------------------------------------------------------------------
Cmdlets
************************************************
Get-Cormand -Type Cmdlet | Sort-Object -Property Noun | Format-Table -GrounpBy Noun
Get-Command -Name <cmdlet> -Args Cert: -Syntax
Get-Command -Name dir // Get-Command -Name <Alias>
Get-Command -Noun WSManInstance // Get-Command -Noun <Recurso>

-------------------------------------------------------------------
Objetos y Pipeline
************************************************
Get-Service -Name "LSM" | Get-Member
Get-Service -Name "LSM" | Get-Member -MemberType Propierty
Get-ltem .\test.txt | Get-Member -MemberType Method
Get-ltem .\test.txt | Select-Object Name, Length

Get-Service | Select-Object -Last 5
Get-Service | Select-Object -First 5
Get-Service | Where-Object {$_.Status -eq "Running"}

(Get-ltem .\test.txt) .IsReadOn1y
(Get-ltem .\test. txt) .IsReadOn1y = 1

Get-Chi1dItem *.txt
(Get-ltem .\test.txt).CopyTo( "Ruta" )

(Get-ltem .\test.txt) .De1ete()
Get-Chi1dItem *.txt
************************************************
Get-Process -Name Acrobat | Stop-Process
Get-Help -Full Get-Process
Get-He1p -Full Stop-Process

Get-Process -Name Acrobat | Stop-Process

Get-He1p -Full Get-Chi1dItem
Get-He1p -Full Get-C1ipboard

Get-He1p -Full Stop-Service

-------------------------------------------------------------------
Funciones
************************************************

